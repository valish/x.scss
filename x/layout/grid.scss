// X Grid
// ~~~~~~

$xg-gridName: x-grid !default;
$xg-colName: x-col !default;
$xg-attributeName: class !default;
$xg-gutter: 1rem !default; // Total left + right
$xg-gutter-vertical: 1rem !default;

$xg-mq-list: (
  lg: "screen and (max-width: 80em)", // max 1280px
  md: "screen and (max-width: 64em)", // max 1024px
  sm: "screen and (max-width: 48em)", // max 768px
  xs: "screen and (max-width: 35.5em)" // up to 568px
) !default;


$xgp_col-1: (100%/12);
$xgp_col-2: ($xgp_col-1*2);
$xgp_col-3: ($xgp_col-1*3);
$xgp_col-4: ($xgp_col-1*4);
$xgp_col-5: ($xgp_col-1*5);
$xgp_col-6: ($xgp_col-1*6);
$xgp_col-7: ($xgp_col-1*7);
$xgp_col-8: ($xgp_col-1*8);
$xgp_col-9: ($xgp_col-1*9);
$xgp_col-10: ($xgp_col-1*10);
$xgp_col-11: ($xgp_col-1*11);
$xgp_col-12: 100%;

$xgp_col-5-12: (100%/5);
$xgp_col-7-12: (100%/7);
$xgp_col-8-12: (100%/8);
$xgp_col-9-12: (100%/9);
$xgp_col-10-12: (100%/10);
$xgp_col-11-12: (100%/11);

// Function to generate the grid by number
@mixin makeGridByNumber($grid)
{
  [#{$xg-attributeName}*="#{$grid}-1"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-1"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-1"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-12;
    max-width: $xgp_col-12;
  }

  [#{$xg-attributeName}*="#{$grid}-2"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-2"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-2"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-6;
    max-width: $xgp_col-6;
  }

  [#{$xg-attributeName}*="#{$grid}-3"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-3"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-3"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-4;
    max-width: $xgp_col-4;
  }

  [#{$xg-attributeName}*="#{$grid}-4"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-4"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-4"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-3;
    max-width: $xgp_col-3;
  }
  [#{$xg-attributeName}*="#{$grid}-5"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-5"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-5"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-5-12;
    max-width: $xgp_col-5-12;
  }
  [#{$xg-attributeName}*="#{$grid}-6"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-6"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-6"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-2;
    max-width: $xgp_col-2;
  }
  [#{$xg-attributeName}*="#{$grid}-7"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-7"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-7"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-7-12;
    max-width: $xgp_col-7-12;
  }
  [#{$xg-attributeName}*="#{$grid}-8"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-8"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-8"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-8-12;
    max-width: $xgp_col-8-12;
  }
  [#{$xg-attributeName}*="#{$grid}-9"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-9"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-9"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-9-12;
    max-width: $xgp_col-9-12;
  }
  [#{$xg-attributeName}*="#{$grid}-10"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-10"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-10"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-10-12;
    max-width: $xgp_col-10-12;
  }
  [#{$xg-attributeName}*="#{$grid}-11"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-11"] > [#{$xg-attributeName}*="#{$xg-colName}-"] {
    flex-basis: $xgp_col-11-12;
    max-width: $xgp_col-11-12;
  }
  [#{$xg-attributeName}*="#{$grid}-12"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  [#{$xg-attributeName}*="#{$grid}-12"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  [#{$xg-attributeName}*="#{$grid}-12"] > [#{$xg-attributeName}*="#{$xg-colName}_"] {
    flex-basis: $xgp_col-1;
    max-width: $xgp_col-1;
  }
}

// Function to generate the grid by columns
@mixin makeCol($col)
{
  [#{$xg-attributeName}~="#{$xg-gridName}"],
  [#{$xg-attributeName}*="#{$xg-gridName}-"],
  [#{$xg-attributeName}*="#{$xg-gridName}_"] {
    > [#{$xg-attributeName}*="#{$col}-1"]{ flex-basis: $xgp_col-1; max-width: $xgp_col-1; }
    > [#{$xg-attributeName}*="#{$col}-2"]{ flex-basis: $xgp_col-2; max-width: $xgp_col-2;  }
    > [#{$xg-attributeName}*="#{$col}-3"]{ flex-basis: $xgp_col-3; max-width: $xgp_col-3;  }
    > [#{$xg-attributeName}*="#{$col}-4"]{ flex-basis: $xgp_col-4; max-width: $xgp_col-4; }
    > [#{$xg-attributeName}*="#{$col}-5"]{ flex-basis: $xgp_col-5; max-width: $xgp_col-5; }
    > [#{$xg-attributeName}*="#{$col}-6"]{ flex-basis: $xgp_col-6; max-width: $xgp_col-6; }
    > [#{$xg-attributeName}*="#{$col}-7"]{ flex-basis: $xgp_col-7; max-width: $xgp_col-7; }
    > [#{$xg-attributeName}*="#{$col}-8"]{ flex-basis: $xgp_col-8; max-width: $xgp_col-8; }
    > [#{$xg-attributeName}*="#{$col}-9"]{ flex-basis: $xgp_col-9; max-width: $xgp_col-9; }
    > [#{$xg-attributeName}*="#{$col}-10"]{ flex-basis: $xgp_col-10; max-width: $xgp_col-10; }
    > [#{$xg-attributeName}*="#{$col}-11"]{ flex-basis: $xgp_col-11; max-width: $xgp_col-11; }
    > [#{$xg-attributeName}*="#{$col}-12"]{ flex-basis: $xgp_col-12; max-width: $xgp_col-12; }
  }
}

// Function to generate the -first & -last base on mq keys (as _xg-first)
@mixin makeFirstLast($mq)
{
  [#{$xg-attributeName}~="#{$xg-gridName}"],
  [#{$xg-attributeName}*="#{$xg-gridName}-"],
  [#{$xg-attributeName}*="#{$xg-gridName}_"] {
    [#{$xg-attributeName}*="#{$mq}-first"]{
      order: -1;
    }
    [#{$xg-attributeName}*="#{$mq}-last"]{
      order: 1;
    }
  }
}

// Function to generate the offset
@mixin makeOff($off)
{
  [#{$xg-attributeName}~="#{$xg-gridName}"],
  [#{$xg-attributeName}*="#{$xg-gridName}-"],
  [#{$xg-attributeName}*="#{$xg-gridName}_"] {
    > [data-push-left*="#{$off}-0"]{ margin-left: 0; }
    > [data-push-left*="#{$off}-1"]{ margin-left: $xgp_col-1; }
    > [data-push-left*="#{$off}-2"]{ margin-left: $xgp_col-2; }
    > [data-push-left*="#{$off}-3"]{ margin-left: $xgp_col-3; }
    > [data-push-left*="#{$off}-4"]{ margin-left: $xgp_col-4; }
    > [data-push-left*="#{$off}-5"]{ margin-left: $xgp_col-5; }
    > [data-push-left*="#{$off}-6"]{ margin-left: $xgp_col-6; }
    > [data-push-left*="#{$off}-7"]{ margin-left: $xgp_col-7; }
    > [data-push-left*="#{$off}-8"]{ margin-left: $xgp_col-8; }
    > [data-push-left*="#{$off}-9"]{ margin-left: $xgp_col-9; }
    > [data-push-left*="#{$off}-10"]{ margin-left: $xgp_col-10; }
    > [data-push-left*="#{$off}-11"]{ margin-left: $xgp_col-11; }

    > [data-push-right*="#{$off}-0"]{ margin-right: 0; }
    > [data-push-right*="#{$off}-1"]{ margin-right: $xgp_col-1; }
    > [data-push-right*="#{$off}-2"]{ margin-right: $xgp_col-2; }
    > [data-push-right*="#{$off}-3"]{ margin-right: $xgp_col-3; }
    > [data-push-right*="#{$off}-4"]{ margin-right: $xgp_col-4; }
    > [data-push-right*="#{$off}-5"]{ margin-right: $xgp_col-5; }
    > [data-push-right*="#{$off}-6"]{ margin-right: $xgp_col-6; }
    > [data-push-right*="#{$off}-7"]{ margin-right: $xgp_col-7; }
    > [data-push-right*="#{$off}-8"]{ margin-right: $xgp_col-8; }
    > [data-push-right*="#{$off}-9"]{ margin-right: $xgp_col-9; }
    > [data-push-right*="#{$off}-10"]{ margin-right: $xgp_col-10; }
    > [data-push-right*="#{$off}-11"]{ margin-right: $xgp_col-11; }
  }
}

// GRID
[#{$xg-attributeName}~="#{$xg-gridName}"],
[#{$xg-attributeName}*="#{$xg-gridName}-"],
[#{$xg-attributeName}*="#{$xg-gridName}_"]{
  display: flex;
  flex-flow: row wrap;
  margin: 0 (-$xg-gutter/2);
}
// COLS
[#{$xg-attributeName}~="#{$xg-colName}"],
[#{$xg-attributeName}*="#{$xg-colName}-"],
[#{$xg-attributeName}*="#{$xg-colName}_"]{
  padding: 0 ($xg-gutter/2) $xg-gutter-vertical;
  max-width: 100%;
}
// JUST "COL" & "COL_"
[#{$xg-attributeName}~="#{$xg-colName}"],
[#{$xg-attributeName}*="#{$xg-colName}_"]{
  flex: 1 1 0%;
}
// JUST "COL-"
[#{$xg-attributeName}*="#{$xg-colName}-"]{
  flex: none;
}

// COL & GRID
[#{$xg-attributeName}~="#{$xg-gridName}"][#{$xg-attributeName}~="#{$xg-colName}"],
[#{$xg-attributeName}~="#{$xg-gridName}"][#{$xg-attributeName}*="#{$xg-colName}-"],
[#{$xg-attributeName}~="#{$xg-gridName}"][#{$xg-attributeName}*="#{$xg-colName}_"],
[#{$xg-attributeName}*="#{$xg-gridName}-"][#{$xg-attributeName}~="#{$xg-colName}"],
[#{$xg-attributeName}*="#{$xg-gridName}-"][#{$xg-attributeName}*="#{$xg-colName}-"],
[#{$xg-attributeName}*="#{$xg-gridName}-"][#{$xg-attributeName}*="#{$xg-colName}_"],
[#{$xg-attributeName}*="#{$xg-gridName}_"][#{$xg-attributeName}~="#{$xg-colName}"],
[#{$xg-attributeName}*="#{$xg-gridName}_"][#{$xg-attributeName}*="#{$xg-colName}-"],
[#{$xg-attributeName}*="#{$xg-gridName}_"][#{$xg-attributeName}*="#{$xg-colName}_"]{
  margin: 0;
  padding: 0;
}

// HELPERS SUFFIXES
// FOR GRID
[#{$xg-attributeName}*="#{$xg-gridName}-"]{
// No spacing between cols : noGutter
  &[#{$xg-attributeName}*="-noGutter"]{
    margin: 0;
    > [#{$xg-attributeName}~="#{$xg-colName}"],
    > [#{$xg-attributeName}*="#{$xg-colName}-"]{
      padding: 0;
    }
  }

// No Wrapping
  &[#{$xg-attributeName}*="-noWrap"]{
    flex-wrap: nowrap;
  }
// Horizontal alignment on center
  &[#{$xg-attributeName}*="-center"]{
    justify-content: center;
  }
// Horizontal alignment on right
  &[#{$xg-attributeName}*="-right"]{
    justify-content: flex-end;
    align-self: flex-end;
    margin-left: auto;
  }
// Vertical alignment on top
  &[#{$xg-attributeName}*="-top"]{
    align-items: flex-start;
  }
// Vertical alignment on middle
  &[#{$xg-attributeName}*="-middle"]{
    align-items: center;
  }
// Vertical alignment on bottom
  &[#{$xg-attributeName}*="-bottom"]{
    align-items: flex-end;
  }

// Orders
  &[#{$xg-attributeName}*="-reverse"]{
    flex-direction: row-reverse;
  }
  &[#{$xg-attributeName}*="-column"] {
    flex-direction: column;
    > [#{$xg-attributeName}*="#{$xg-colName}-"] {
      flex-basis: auto;
    }
  }
  &[#{$xg-attributeName}*="-column-reverse"]{
    flex-direction: column-reverse;
  }

// Spaces between and around cols
  &[#{$xg-attributeName}*="-spaceBetween"]{
    justify-content: space-between;
  }
  &[#{$xg-attributeName}*="-spaceAround"]{
    justify-content: space-around;
  }

// Equal heights columns
  &[#{$xg-attributeName}*="-equalHeight"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  &[#{$xg-attributeName}*="-equalHeight"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  &[#{$xg-attributeName}*="-equalHeight"] > [#{$xg-attributeName}*="#{$xg-colName}_"]{
    align-self: stretch;
    > *{
      height: 100%;
    }
  }
// Removes the padding-bottom
  &[#{$xg-attributeName}*="-noBottom"] > [#{$xg-attributeName}~="#{$xg-colName}"],
  &[#{$xg-attributeName}*="-noBottom"] > [#{$xg-attributeName}*="#{$xg-colName}-"],
  &[#{$xg-attributeName}*="-noBottom"] > [#{$xg-attributeName}*="#{$xg-colName}_"]{
    padding-bottom: 0;
  }
}

// FOR COL
[#{$xg-attributeName}*="#{$xg-colName}-"]{
  &[#{$xg-attributeName}*="-top"]{
    align-self: flex-start;
  }
  &[#{$xg-attributeName}*="-middle"]{
    align-self: center;
  }
  &[#{$xg-attributeName}*="-bottom"]{
    align-self: flex-end;
  }
  &[#{$xg-attributeName}*="-first"]{
    order: -1;
  }
  &[#{$xg-attributeName}*="-last"]{
    order: 1;
  }
}
// GRID BY NUMBER
@include makeGridByNumber(#{$xg-gridName});
@each $mq-key, $mq-value in $xg-mq-list {
  @media #{$mq-value} {
    @include makeGridByNumber(_#{$mq-key});
  }
}

// COLS SIZES
@include makeCol(#{$xg-colName});
@include makeOff(off);


@each $mq-key, $mq-value in $xg-mq-list {
  @media #{$mq-value} {
    @include makeCol(_#{$mq-key});
    @include makeOff(_#{$mq-key});
    @include makeFirstLast(_#{$mq-key});
  }
}



// HIDING COLS

/*[#{$xg-attributeName}*="#{$xg-colName}-"]:not([#{$xg-attributeName}*="#{$xg-gridName}"]):not([#{$xg-attributeName}*="#{$xg-colName}-0"]) {
  display: block;
}
[#{$xg-attributeName}~="#{$xg-gridName}"][#{$xg-attributeName}*="#{$xg-colName}-"]:not([#{$xg-attributeName}*="#{$xg-colName}-0"]) {
  display: flex;
}*/
[#{$xg-attributeName}*="#{$xg-colName}-"][#{$xg-attributeName}*="#{$xg-colName}-0"] {
  display: none;
}

@each $mq-key, $mq-value in $xg-mq-list {
  @media #{$mq-value} {//_#{$mq-key}
    [#{$xg-attributeName}~="#{$xg-gridName}"],
    [#{$xg-attributeName}*="#{$xg-gridName}-"],
    [#{$xg-attributeName}*="#{$xg-gridName}_"]{
      > :not([#{$xg-attributeName}*="_#{$mq-key}-0"]){
        display: block;
      }/*
      &:not([#{$xg-attributeName}*="_#{$mq-key}-0"]) {
        display: flex;
      }*/
      >[#{$xg-attributeName}*="_#{$mq-key}-0"]{
      //&[#{$xg-attributeName}*="-equalHeight"] > [#{$xg-attributeName}*="_#{$mq-key}-0"]{
        display: none;
      }
    }
  }
}
